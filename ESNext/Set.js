// Set √© uma estrutura de dados em JavaScript que armazena valores √∫nicos, o que significa que n√£o pode haver elementos duplicados no conjunto.
const times = new Set();

times.add("Flamengo");
times.add("Vasco");
times.add("Palmeiras");
times.add("Fluminense");
times.add("S√£o Paulo");
console.log(times);
console.log(times.size);

// const fruitsArray = ["Ma√ß√£", "Banana", "Laranja", "Morango"];
// const isValidArray = (food: string) => {
//   if (fruitsArray.includes(food)) return console.log("fruit");
// };


// const fruitSet = new Set(["Ma√ß√£", "Banana", "Laranja", "Morango"])
// const isValidSet = (food: string) => {
//   if (fruitSet.has(food)) return console.log("fruit")
// }


// Quando Utilizar o M√©todo Set?

// Cen√°rio: Trabalhando com cole√ß√µes de dados onde a exclusividade √© crucial.
// Benef√≠cio do Set: Remove automaticamente duplicatas, garantindo uma cole√ß√£o √∫nica e sem repeti√ß√µes.

const listaComDuplicatas = [1, 2, 2, 3, 4, 4, 5];
const conjuntoSemDuplicatas = new Set(listaComDuplicatas);

// Cen√°rio: Necessidade de verificar rapidamente se um elemento est√° presente em uma cole√ß√£o.
// Benef√≠cio do Set: O m√©todo has proporciona uma verifica√ß√£o de pertencimento eficiente, ideal para consultas r√°pidas em grandes conjuntos de dados.

const conjuntoDeCores = new Set(["Vermelho", "Verde", "Azul"]);
console.log(conjuntoDeCores.has("Verde")); // true

// Cen√°rio: Manter uma lista de valores exclusivos.
// Benef√≠cio do Set: Oferece uma maneira direta de armazenar valores √∫nicos, eliminando a necessidade de verifica√ß√µes manuais.
const conjuntoDeEmails = new Set();
conjuntoDeEmails.add("exemplo@email.com");

// Cen√°rio: Realizar opera√ß√µes como uni√£o, interse√ß√£o e diferen√ßa entre conjuntos.
// Benef√≠cio do Set: Simplifica tarefas complexas de conjunto de forma eficiente.
const conjuntoA = new Set([1, 2, 3]);
const conjuntoB = new Set([2, 3, 4]);
const uniao = new Set([...conjuntoA, ...conjuntoB]); // Uni√£o


// ‚ö°Ô∏è Dica R√°pida:

// Flexibilidade: Use Set quando a ordem dos elementos n√£o √© cr√≠tica e quando voc√™ se beneficia de valores √∫nicos.
// Vamos potencializar nossos c√≥digos com o m√©todo Set! üí° Compartilhe suas experi√™ncias e casos de uso nos coment√°rios. Juntos, vamos aprimorar nossas habilidades em JavaScript! üåêüîÑ #JavaScript #SetMethod #WebDevelopment #TechTips #CodingJourney